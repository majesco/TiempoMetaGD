{"version":3,"sources":["days.js","App.js","reportWebVitals.js","index.js"],"names":["CONSTANTS","buyOffsetAmount","investment","base","newInvestment","newBase","newDays","daysToRebuy","dailyAmount","days","Math","ceil","round","daysToGoalAux","goal","Infinity","daysToGoal","date","result","Date","setDate","getDate","addDays","toLocaleDateString","weekday","year","month","day","App","props","handleClick","daysObject","Number","state","setState","handleChangeGoal","e","target","value","handleChangeInvestment","handleChangeBase","className","type","this","onChange","onClick","toString","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a458bcb.chunk.js","sourcesContent":["const CONSTANTS = {\n  PerformanceDailyfactor: 140,\n  reBuyAmount: 107,\n};\n\nconst buyOffsetAmount = (investment, base) => {\n  if (base < CONSTANTS.reBuyAmount) {\n    return { newInvestment: investment, newBase: base, newDays: 0 };\n  }\n\n  return buyOffsetAmount(investment + 100, base - CONSTANTS.reBuyAmount);\n};\n\nconst daysToRebuy = (investment, base) => {\n  if (base >= CONSTANTS.reBuyAmount) {\n    return buyOffsetAmount(investment, base);\n  }\n\n  const dailyAmount = investment / CONSTANTS.PerformanceDailyfactor;\n  const days = Math.ceil((CONSTANTS.reBuyAmount - base) / dailyAmount);\n  const newBase = Math.round(dailyAmount * days + base - CONSTANTS.reBuyAmount);\n  return {\n    newInvestment: days > 0 ? investment + 100 : investment,\n    newBase,\n    newDays: days > 0 ? days : 0,\n  };\n};\n\nconst daysToGoalAux = (goal, investment, base, days) => {\n  if (investment >= goal || days === Infinity) {\n    return days;\n  }\n\n  const { newInvestment, newBase, newDays } = daysToRebuy(investment, base);\n\n  return daysToGoalAux(goal, newInvestment, newBase, days + newDays);\n};\n\nexport const daysToGoal = (goal, investment, base) => {\n  const addDays = (date, days) => {\n    const result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  };\n\n  const options = {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  };\n\n  const days = daysToGoalAux(goal, investment, base, 0);\n  return {\n    date: addDays(new Date(), days).toLocaleDateString(\"es-ES\", options),\n    days,\n  };\n};\n","import React, { Component } from \"react\";\nimport { daysToGoal } from \"./days\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { goal: 0, investment: 0, base: 0, days: 0, date: \"\" };\n  }\n\n  handleClick = () => {\n    const daysObject = daysToGoal(\n      Number(this.state.goal),\n      Number(this.state.investment),\n      Number(this.state.base)\n    );\n\n    this.setState({ days: daysObject.days });\n    this.setState({ date: daysObject.date });\n  };\n\n  handleChangeGoal = (e) => {\n    this.setState({ goal: e.target.value });\n  };\n  handleChangeInvestment = (e) => {\n    this.setState({ investment: e.target.value });\n  };\n  handleChangeBase = (e) => {\n    this.setState({ base: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <br />\n            <h3>\n              Cuántos días para alcanzar mi meta de inversión en Ganancias\n              Deportivas?\n            </h3>\n          </div>\n        </div>\n        <br />\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <form>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">\n                  Meta de inversión en € Euros\n                </label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  value={this.state.goal}\n                  onChange={this.handleChangeGoal}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Inversión Total Actual</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  value={this.state.investment}\n                  onChange={this.handleChangeInvestment}\n                />\n              </div>\n              <div className=\"mb-3\">\n                <label className=\"form-label\">Saldo Disponible Actual</label>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  value={this.state.base}\n                  onChange={this.handleChangeBase}\n                />\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.handleClick}\n              >\n                Calcular\n              </button>\n            </form>\n          </div>\n        </div>\n        <br />\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            {this.state.date && (\n              <div className=\"card border-success mb-3\">\n                <div className=\"card-header\">Fecha para alcanzar meta!</div>\n                <div className=\"card-body text-success\">\n                  <h5 className=\"card-title\">\n                    Dentro de {this.state.days} días\n                  </h5>\n                  <p className=\"card-text\">\n                    Alcanzaras la meta el {this.state.date.toString()}\n                  </p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}